// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc4097.DeepSpace.commands;
import edu.wpi.first.wpilibj.command.Command;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc4097.DeepSpace.Robot;

/**
 *
 */
public class GrabbyGrab extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public GrabbyGrab() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.grabberArm);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        if (Robot.oi.xbox.getRawButtonPressed(1)){
            if (Robot.grabberArm.presetString != "Resting"){
                Robot.grabberArm.lowerTarget = 110;
                Robot.grabberArm.upperTarget = 0;
                Robot.grabberArm.autoControl = true;
                Robot.grabberArm.presetString = "Resting";
            }
            else{
                Robot.grabberArm.autoControl = false;
                Robot.grabberArm.presetString = "None";
            }
        }
        if (Robot.oi.xbox.getRawAxis(1) >=  0.15 ||
            Robot.oi.xbox.getRawAxis(1) <= -0.15 ||
            Robot.oi.xbox.getRawAxis(5) >=  0.15 ||
            Robot.oi.xbox.getRawAxis(5) <= -0.15){
            Robot.grabberArm.autoControl = false;
            Robot.grabberArm.presetString = "None";
        }
        Robot.grabberArm.goToTargetAngle();
        if (Robot.grabberArm.autoControl == false){
            Robot.grabberArm.elbowTurn(-1*Robot.oi.xbox.getRawAxis(5));
            Robot.grabberArm.wristTurn(Robot.oi.xbox.getRawAxis(1));
        }
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        Robot.grabberArm.stopArms();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
